{"file":"C:\\Users\\ojoseph\\Documents\\StrellerMinds-Backend\\src\\email\\utils\\tracking.util.ts","mappings":"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","names":[],"sources":["C:\\Users\\ojoseph\\Documents\\StrellerMinds-Backend\\src\\email\\utils\\tracking.util.ts"],"sourcesContent":["import * as crypto from 'crypto';\r\nimport { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\n\r\n@Injectable()\r\nexport class EmailTrackingUtil {\r\n  private readonly secret: string;\r\n  private readonly baseUrl: string;\r\n\r\n  constructor(private readonly configService: ConfigService) {\r\n    this.secret = this.configService.get<string>('EMAIL_TRACKING_SECRET');\r\n    this.baseUrl = this.configService.get<string>('EMAIL_TRACKING_BASE_URL') || this.configService.get<string>('BASE_URL') || '';\r\n\r\n    if (!this.secret || this.secret.length < 32) {\r\n      throw new BadRequestException('EMAIL_TRACKING_SECRET is not configured or too short');\r\n    }\r\n  }\r\n\r\n  generateTrackingToken(): string {\r\n    return crypto.randomBytes(32).toString('hex');\r\n  }\r\n\r\n  signUrl(emailIdOrToken: string, url: string): string {\r\n    const payload = `${emailIdOrToken}:${url}`;\r\n    const hmac = crypto.createHmac('sha256', this.secret);\r\n    hmac.update(payload);\r\n    return hmac.digest('hex');\r\n  }\r\n\r\n  verifySignature(emailIdOrToken: string, url: string, signature: string): boolean {\r\n    try {\r\n      const expected = this.signUrl(emailIdOrToken, url);\r\n      const sigBuf = Buffer.from(signature);\r\n      const expBuf = Buffer.from(expected);\r\n      if (sigBuf.length !== expBuf.length) return false;\r\n      return crypto.timingSafeEqual(sigBuf, expBuf);\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getOpenTrackingUrl(trackingToken: string): string {\r\n    return `${this.baseUrl}/email/track/open/${trackingToken}.png`;\r\n  }\r\n\r\n  getClickTrackingUrl(trackingToken: string, targetUrl: string): string {\r\n    const encodedUrl = encodeURIComponent(targetUrl);\r\n    const signature = this.signUrl(trackingToken, targetUrl);\r\n    return `${this.baseUrl}/email/track/click/${trackingToken}?url=${encodedUrl}&sig=${signature}`;\r\n  }\r\n\r\n  injectOpenTracking(htmlContent: string, trackingToken: string): string {\r\n    const pixel = `<img src=\"${this.getOpenTrackingUrl(trackingToken)}\" width=\"1\" height=\"1\" style=\"display:none;\" alt=\"\" />`;\r\n    if (typeof htmlContent !== 'string') return pixel;\r\n    if (htmlContent.includes('</body>')) {\r\n      return htmlContent.replace('</body>', `${pixel}</body>`);\r\n    }\r\n    return htmlContent + pixel;\r\n  }\r\n\r\n  injectClickTracking(htmlContent: string, trackingToken: string): string {\r\n    if (typeof htmlContent !== 'string') return htmlContent;\r\n    const hrefRegex = /href=[\"']([^\"']+)[\"']/gi;\r\n    return htmlContent.replace(hrefRegex, (match, url) => {\r\n      if (!url) return match;\r\n      if (url.startsWith('mailto:') || url.startsWith('tel:') || url.startsWith('#')) return match;\r\n      if (url.includes('/email/track/click/')) return match;\r\n      const trackedUrl = this.getClickTrackingUrl(trackingToken, url);\r\n      return `href=\"${trackedUrl}\"`;\r\n    });\r\n  }\r\n\r\n  addTrackingToEmail(htmlContent: string, trackingToken: string): string {\r\n    let tracked = htmlContent;\r\n    tracked = this.injectClickTracking(tracked, trackingToken);\r\n    tracked = this.injectOpenTracking(tracked, trackingToken);\r\n    return tracked;\r\n  }\r\n}\r\n\r\n// Backwards-compatible helpers for existing imports in EmailService\r\nexport function addTrackingToEmail(html: string, trackingToken: string, baseUrl?: string): string {\r\n  // Allow function-style usage by constructing a minimal util with provided baseUrl\r\n  const fakeConfig = {\r\n    get: (key: string) => (key === 'EMAIL_TRACKING_SECRET' ? process.env.EMAIL_TRACKING_SECRET : key === 'EMAIL_TRACKING_BASE_URL' ? (baseUrl || process.env.EMAIL_TRACKING_BASE_URL || process.env.BASE_URL) : undefined),\r\n  } as unknown as ConfigService;\r\n  const util = new EmailTrackingUtil(fakeConfig);\r\n  return util.addTrackingToEmail(html, trackingToken);\r\n}\r\n\r\nexport function generateEmailId(): string {\r\n  return crypto.randomBytes(16).toString('hex');\r\n}\r\n\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nexport function addTrackingToEmail(html: string, emailId: string, baseUrl: string): string {\r\n  // Add tracking pixel for opens\r\n  const trackingPixel = `<img src=\"${baseUrl}/email/track/open/${emailId}\" width=\"1\" height=\"1\" alt=\"\" style=\"display:none;\">`\r\n\r\n  // Add tracking to all links\r\n  let modifiedHtml = html.replace(/<a\\s+(?:[^>]*?\\s+)?href=[\"']([^\"']*)[\"']/gi, (match, url) => {\r\n    // Don't track unsubscribe links\r\n    if (url.includes(\"/unsubscribe\") || url.includes(\"/preferences\")) {\r\n      return match\r\n    }\r\n\r\n    const trackingUrl = `${baseUrl}/email/track/click/${emailId}?url=${encodeURIComponent(url)}`\r\n    return match.replace(url, trackingUrl)\r\n  })\r\n\r\n  // Add tracking pixel at the end of the email\r\n  modifiedHtml = modifiedHtml.replace(\"</body>\", `${trackingPixel}</body>`)\r\n\r\n  return modifiedHtml\r\n}\r\n\r\nexport function generateEmailId(): string {\r\n  return uuidv4()\r\n}\r\n\r\n"],"version":3}