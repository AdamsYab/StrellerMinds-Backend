349110aa62571845cabc92ea6e1cebd5
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppModule = void 0;
// import { I18nModule } from './i18n/i18n.module';
const common_1 = require("@nestjs/common");
const config_1 = require("@nestjs/config");
const typeorm_1 = require("@nestjs/typeorm");
const users_module_1 = require("./users/users.module");
const courses_module_1 = require("./courses/courses.module");
const auth_module_1 = require("./auth/auth.module");
const certificate_module_1 = require("./certificate/certificate.module");
const files_module_1 = require("./files/files.module");
const email_module_1 = require("./email/email.module");
const lesson_module_1 = require("./lesson/lesson.module");
const ipfs_module_1 = require("./ipfs/ipfs.module");
const moderation_module_1 = require("./moderation/moderation.module");
const submission_module_1 = require("./submission/submission.module");
const user_profiles_module_1 = require("./user-profiles/user-profiles.module");
const credential_module_1 = require("./credential/credential.module");
const translation_module_1 = require("./translation/translation.module");
const app_controller_1 = require("./app.controller");
const app_service_1 = require("./app.service");
// import { FeedbackModule } from './feedback/feedback.module';
const mentorship_module_1 = require("./mentorship/mentorship.module");
const archive_module_1 = require("./archive/archive.module");
const database_config_1 = __importDefault(require("./config/database.config"));
const schedule_1 = require("@nestjs/schedule");
const gdpr_module_1 = require("./gdpr/gdpr.module");
const monitoring_module_1 = require("./monitoring/monitoring-module");
const courses_advances_module_1 = require("./courses-advances/courses-advances.module");
const core_1 = require("@nestjs/core");
const throttler_1 = require("@nestjs/throttler");
const custom_throttler_guard_1 = require("./common/guards/custom-throttler.guard");
const api_usage_logger_middleware_1 = require("./common/middleware/api-usage-logger.middleware");
const deprecation_warning_middleware_1 = require("./common/middleware/deprecation-warning.middleware");
const version_tracking_interceptor_1 = require("./common/interceptors/version-tracking.interceptor");
const version_analytics_service_1 = require("./common/services/version-analytics.service");
const performance_interceptor_1 = require("./monitoring/performance.interceptor");
const auth_controller_v1_1 = require("./modules/auth/controllers/auth.controller.v1");
const auth_controller_v2_1 = require("./modules/auth/controllers/auth.controller.v2");
// import { CoursesControllerV1 } from './modules/courses/controllers/courses.controller.v1';
// import { CoursesControllerV2 } from './modules/courses/controllers/courses.controller.v2';
const version_controller_1 = require("./modules/version/version.controller");
const api_version_config_1 = require("./config/api-version.config");
const version_header_middleware_1 = require("./common/middleware/version-header.middleware");
const payment_module_1 = require("./payment/payment.module");
const ENV = process.env.NODE_ENV;
;
console.log('NODE_ENV:', process.env.NODE_ENV);
console.log('ENV:', ENV);
let AppModule = class AppModule {
    configure(consumer) {
        consumer
            .apply(version_header_middleware_1.VersionHeaderMiddleware, deprecation_warning_middleware_1.DeprecationWarningMiddleware, api_usage_logger_middleware_1.ApiUsageLoggerMiddleware)
            .forRoutes('*');
    }
};
exports.AppModule = AppModule;
exports.AppModule = AppModule = __decorate([
    (0, common_1.Module)({
        imports: [
            throttler_1.ThrottlerModule.forRoot({
                ttl: 60, // 60 seconds
                limit: 100,
            }),
            // Global Config
            schedule_1.ScheduleModule.forRoot(),
            config_1.ConfigModule.forRoot({
                isGlobal: true,
                envFilePath: !ENV ? '.env' : `.env.${ENV.trim()}`,
                load: [database_config_1.default, () => ({ api: api_version_config_1.apiVersionConfig })],
            }),
            // Database
            typeorm_1.TypeOrmModule.forRootAsync({
                imports: [config_1.ConfigModule],
                inject: [config_1.ConfigService],
                useFactory: async (configService) => ({
                    type: 'postgres',
                    host: configService.get('database.host'),
                    port: configService.get('database.port'),
                    username: configService.get('database.user'),
                    password: configService.get('database.password'),
                    database: configService.get('database.name'),
                    autoLoadEntities: configService.get('database.autoload'),
                    synchronize: configService.get('database.synchronize'),
                    // Connection Pool Settings
                    extra: {
                        max: configService.get('database.maxPoolSize'),
                        min: configService.get('database.minPoolSize'),
                        idleTimeoutMillis: configService.get('database.poolIdleTimeout'),
                    },
                    // Retry Mechanism
                    retryAttempts: configService.get('database.retryAttempts'),
                    retryDelay: configService.get('database.retryDelay'),
                }),
            }),
            users_module_1.UsersModule,
            courses_module_1.CoursesModule,
            auth_module_1.AuthModule,
            certificate_module_1.CertificateModule,
            files_module_1.FilesModule,
            email_module_1.EmailModule,
            lesson_module_1.LessonModule,
            ipfs_module_1.IpfsModule,
            moderation_module_1.ModerationModule,
            submission_module_1.SubmissionModule,
            user_profiles_module_1.UserProfilesModule,
            credential_module_1.CredentialModule,
            archive_module_1.ArchiveModule,
            // FeedbackModule,
            // I18nModule,
            mentorship_module_1.MentorshipModule,
            translation_module_1.TranslationModule,
            gdpr_module_1.GdprModule,
            monitoring_module_1.MonitoringModule,
            users_module_1.UsersModule,
            courses_advances_module_1.CoursesAdvancesModule,
            auth_controller_v1_1.AuthControllerV1,
            auth_controller_v2_1.AuthControllerV2,
            // CoursesControllerV1,
            // CoursesControllerV2,
            version_controller_1.VersionController,
            CmsModule,
            payment_module_1.PaymentModule,
        ],
        controllers: [app_controller_1.AppController],
        providers: [
            app_service_1.AppService,
            version_analytics_service_1.VersionAnalyticsService,
            {
                provide: core_1.APP_INTERCEPTOR,
                useClass: version_tracking_interceptor_1.VersionTrackingInterceptor,
            },
            {
                provide: core_1.APP_INTERCEPTOR,
                useClass: performance_interceptor_1.PerformanceInterceptor,
            },
            {
                provide: core_1.APP_GUARD,
                useClass: custom_throttler_guard_1.CustomThrottlerGuard,
            },
            StellarService,
        ],
    })
], AppModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,