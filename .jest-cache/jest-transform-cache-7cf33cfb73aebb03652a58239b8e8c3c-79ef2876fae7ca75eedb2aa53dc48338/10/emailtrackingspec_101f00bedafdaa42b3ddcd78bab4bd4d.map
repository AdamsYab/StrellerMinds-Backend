{"file":"C:\\Users\\ojoseph\\Documents\\StrellerMinds-Backend\\test\\integration\\email-tracking.spec.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAuC;AAEvC,mDAAqC;AACrC,+DAA2D;AAC3D,2CAA8C;AAC9C,6CAAgD;AAChD,gFAAqE;AACrE,uEAAwE;AAExE,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;IAC5C,IAAI,GAAqB,CAAC;IAC1B,IAAI,YAA+B,CAAC;IAEpC,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,SAAS,GAAG,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC/C,OAAO,EAAE;gBACP,qBAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACxC,uBAAa,CAAC,OAAO,CAAC;oBACpB,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,UAAU;oBACpB,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,CAAC,2BAAQ,CAAC;oBACpB,WAAW,EAAE,IAAI;iBAClB,CAAC;gBACF,0BAAW;aACZ;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,GAAG,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;QACxC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QACjB,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,iCAAiB,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,KAAK,GAAG,QAAQ,CAAC;QACvB,MAAM,GAAG,GAAG,qBAAqB,CAAC;QAClC,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC3C,GAAG,CAAC,sBAAsB,KAAK,QAAQ,kBAAkB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC;aAC5E,MAAM,CAAC,GAAG,CAAC,CAAC;QACf,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\ojoseph\\Documents\\StrellerMinds-Backend\\test\\integration\\email-tracking.spec.ts"],"sourcesContent":["import { Test } from '@nestjs/testing';\r\nimport { INestApplication } from '@nestjs/common';\r\nimport * as request from 'supertest';\r\nimport { EmailModule } from '../../src/email/email.module';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmailLog } from '../../src/email/entities/email-log.entity';\r\nimport { EmailTrackingUtil } from '../../src/email/utils/tracking.util';\r\n\r\ndescribe('Email Tracking (Integration)', () => {\r\n  let app: INestApplication;\r\n  let trackingUtil: EmailTrackingUtil;\r\n\r\n  beforeAll(async () => {\r\n    const moduleRef = await Test.createTestingModule({\r\n      imports: [\r\n        ConfigModule.forRoot({ isGlobal: true }),\r\n        TypeOrmModule.forRoot({\r\n          type: 'sqlite',\r\n          database: ':memory:',\r\n          dropSchema: true,\r\n          entities: [EmailLog],\r\n          synchronize: true,\r\n        }),\r\n        EmailModule,\r\n      ],\r\n    }).compile();\r\n\r\n    app = moduleRef.createNestApplication();\r\n    await app.init();\r\n    trackingUtil = app.get(EmailTrackingUtil);\r\n  });\r\n\r\n  afterAll(async () => {\r\n    await app.close();\r\n  });\r\n\r\n  it('GET /email/track/open/:token.png returns pixel', async () => {\r\n    const res = await request(app.getHttpServer()).get('/email/track/open/testtoken.png').expect(200);\r\n    expect(res.headers['content-type']).toContain('image/png');\r\n  });\r\n\r\n  it('GET /email/track/click/:token redirects with valid signature', async () => {\r\n    const token = 'tok123';\r\n    const url = 'https://example.com';\r\n    const sig = trackingUtil.signUrl(token, url);\r\n    const res = await request(app.getHttpServer())\r\n      .get(`/email/track/click/${token}?url=${encodeURIComponent(url)}&sig=${sig}`)\r\n      .expect(302);\r\n    expect(res.headers.location).toBe(url);\r\n  });\r\n});\r\n\r\n\r\n"],"version":3}