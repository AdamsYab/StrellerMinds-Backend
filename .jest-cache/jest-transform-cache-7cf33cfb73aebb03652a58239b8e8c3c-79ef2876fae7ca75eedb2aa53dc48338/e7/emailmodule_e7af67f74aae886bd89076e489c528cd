dc4afc3644da48bf7a2d250dd6510cc7
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailModule = void 0;
/**
 * EmailModule provides email sending, analytics, preference management, and tracking features.
 *
 * @module Email
 */
const common_1 = require("@nestjs/common");
const config_1 = require("@nestjs/config");
const bull_1 = require("@nestjs/bull");
const typeorm_1 = require("@nestjs/typeorm");
const email_service_1 = require("./email.service");
const email_controller_1 = require("./email.controller");
const email_preference_controller_1 = require("./email-preference.controller");
const email_processor_1 = require("./email.processor");
const email_template_entity_1 = require("./entities/email-template.entity");
const email_log_entity_1 = require("./entities/email-log.entity");
const email_preference_entity_1 = require("./entities/email-preference.entity");
const analytics_controller_1 = require("./admin/analytics.controller");
const template_controller_1 = require("./admin/template.controller");
const template_service_1 = require("./admin/template.service");
const test_util_1 = require("./utils/test.util");
const preview_controller_1 = require("./admin/preview.controller");
const mock_email_service_1 = require("./mock-email.service");
const tracking_util_1 = require("./utils/tracking.util");
let EmailModule = class EmailModule {
};
exports.EmailModule = EmailModule;
exports.EmailModule = EmailModule = __decorate([
    (0, common_1.Module)({
        imports: [
            config_1.ConfigModule,
            typeorm_1.TypeOrmModule.forFeature([email_template_entity_1.EmailTemplate, email_log_entity_1.EmailLog, email_preference_entity_1.EmailPreference]),
            bull_1.BullModule.registerQueue({
                name: 'email',
            }),
        ],
        controllers: [
            email_controller_1.EmailController,
            email_preference_controller_1.EmailPreferenceController,
            analytics_controller_1.EmailAnalyticsController,
            template_controller_1.EmailTemplateController,
            preview_controller_1.EmailPreviewController,
        ],
        providers: [
            {
                provide: email_service_1.EmailService,
                useFactory: (config) => {
                    if (config.get('NODE_ENV') === 'development' ||
                        config.get('EMAIL_ENABLED') === 'false') {
                        return new mock_email_service_1.MockEmailService();
                    }
                    // The real EmailService will be instantiated by Nest with DI for other deps
                    return new email_service_1.EmailService(config, undefined, // emailQueue
                    undefined, // emailTemplateRepository
                    undefined, // emailLogRepository
                    undefined);
                },
                inject: [config_1.ConfigService],
            },
            email_processor_1.EmailProcessor,
            template_service_1.EmailTemplateService,
            test_util_1.EmailTestService,
            tracking_util_1.EmailTrackingUtil,
        ],
        exports: [email_service_1.EmailService],
    })
], EmailModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxvam9zZXBoXFxEb2N1bWVudHNcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxlbWFpbFxcZW1haWwubW9kdWxlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7O0dBSUc7QUFDSCwyQ0FBd0M7QUFDeEMsMkNBQTZEO0FBQzdELHVDQUEwQztBQUMxQyw2Q0FBZ0Q7QUFDaEQsbURBQStDO0FBQy9DLHlEQUFxRDtBQUNyRCwrRUFBMEU7QUFDMUUsdURBQW1EO0FBQ25ELDRFQUFpRTtBQUNqRSxrRUFBdUQ7QUFDdkQsZ0ZBQXFFO0FBQ3JFLHVFQUF3RTtBQUN4RSxxRUFBc0U7QUFDdEUsK0RBQWdFO0FBQ2hFLGlEQUFxRDtBQUNyRCxtRUFBb0U7QUFDcEUsNkRBQXdEO0FBQ3hELHlEQUEwRDtBQTZDbkQsSUFBTSxXQUFXLEdBQWpCLE1BQU0sV0FBVztDQUFHLENBQUE7QUFBZCxrQ0FBVztzQkFBWCxXQUFXO0lBM0N2QixJQUFBLGVBQU0sRUFBQztRQUNOLE9BQU8sRUFBRTtZQUNQLHFCQUFZO1lBQ1osdUJBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxxQ0FBYSxFQUFFLDJCQUFRLEVBQUUseUNBQWUsQ0FBQyxDQUFDO1lBQ3BFLGlCQUFVLENBQUMsYUFBYSxDQUFDO2dCQUN2QixJQUFJLEVBQUUsT0FBTzthQUNkLENBQUM7U0FDSDtRQUNELFdBQVcsRUFBRTtZQUNYLGtDQUFlO1lBQ2YsdURBQXlCO1lBQ3pCLCtDQUF3QjtZQUN4Qiw2Q0FBdUI7WUFDdkIsMkNBQXNCO1NBQ3ZCO1FBQ0QsU0FBUyxFQUFFO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLDRCQUFZO2dCQUNyQixVQUFVLEVBQUUsQ0FBQyxNQUFxQixFQUFFLEVBQUU7b0JBQ3BDLElBQ0UsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxhQUFhO3dCQUN4QyxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxLQUFLLE9BQU8sRUFDdkMsQ0FBQzt3QkFDRCxPQUFPLElBQUkscUNBQWdCLEVBQUUsQ0FBQztvQkFDaEMsQ0FBQztvQkFDRCw0RUFBNEU7b0JBQzVFLE9BQU8sSUFBSSw0QkFBWSxDQUNyQixNQUFNLEVBQ04sU0FBUyxFQUFFLGFBQWE7b0JBQ3hCLFNBQVMsRUFBRSwwQkFBMEI7b0JBQ3JDLFNBQVMsRUFBRSxxQkFBcUI7b0JBQ2hDLFNBQVMsQ0FDVixDQUFDO2dCQUNKLENBQUM7Z0JBQ0QsTUFBTSxFQUFFLENBQUMsc0JBQWEsQ0FBQzthQUN4QjtZQUNELGdDQUFjO1lBQ2QsdUNBQW9CO1lBQ3BCLDRCQUFnQjtZQUNoQixpQ0FBaUI7U0FDbEI7UUFDRCxPQUFPLEVBQUUsQ0FBQyw0QkFBWSxDQUFDO0tBQ3hCLENBQUM7R0FDVyxXQUFXLENBQUciLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxvam9zZXBoXFxEb2N1bWVudHNcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxlbWFpbFxcZW1haWwubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFbWFpbE1vZHVsZSBwcm92aWRlcyBlbWFpbCBzZW5kaW5nLCBhbmFseXRpY3MsIHByZWZlcmVuY2UgbWFuYWdlbWVudCwgYW5kIHRyYWNraW5nIGZlYXR1cmVzLlxyXG4gKlxyXG4gKiBAbW9kdWxlIEVtYWlsXHJcbiAqL1xyXG5pbXBvcnQgeyBNb2R1bGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IENvbmZpZ01vZHVsZSwgQ29uZmlnU2VydmljZSB9IGZyb20gJ0BuZXN0anMvY29uZmlnJztcclxuaW1wb3J0IHsgQnVsbE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvYnVsbCc7XHJcbmltcG9ydCB7IFR5cGVPcm1Nb2R1bGUgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nO1xyXG5pbXBvcnQgeyBFbWFpbFNlcnZpY2UgfSBmcm9tICcuL2VtYWlsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBFbWFpbENvbnRyb2xsZXIgfSBmcm9tICcuL2VtYWlsLmNvbnRyb2xsZXInO1xyXG5pbXBvcnQgeyBFbWFpbFByZWZlcmVuY2VDb250cm9sbGVyIH0gZnJvbSAnLi9lbWFpbC1wcmVmZXJlbmNlLmNvbnRyb2xsZXInO1xyXG5pbXBvcnQgeyBFbWFpbFByb2Nlc3NvciB9IGZyb20gJy4vZW1haWwucHJvY2Vzc29yJztcclxuaW1wb3J0IHsgRW1haWxUZW1wbGF0ZSB9IGZyb20gJy4vZW50aXRpZXMvZW1haWwtdGVtcGxhdGUuZW50aXR5JztcclxuaW1wb3J0IHsgRW1haWxMb2cgfSBmcm9tICcuL2VudGl0aWVzL2VtYWlsLWxvZy5lbnRpdHknO1xyXG5pbXBvcnQgeyBFbWFpbFByZWZlcmVuY2UgfSBmcm9tICcuL2VudGl0aWVzL2VtYWlsLXByZWZlcmVuY2UuZW50aXR5JztcclxuaW1wb3J0IHsgRW1haWxBbmFseXRpY3NDb250cm9sbGVyIH0gZnJvbSAnLi9hZG1pbi9hbmFseXRpY3MuY29udHJvbGxlcic7XHJcbmltcG9ydCB7IEVtYWlsVGVtcGxhdGVDb250cm9sbGVyIH0gZnJvbSAnLi9hZG1pbi90ZW1wbGF0ZS5jb250cm9sbGVyJztcclxuaW1wb3J0IHsgRW1haWxUZW1wbGF0ZVNlcnZpY2UgfSBmcm9tICcuL2FkbWluL3RlbXBsYXRlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBFbWFpbFRlc3RTZXJ2aWNlIH0gZnJvbSAnLi91dGlscy90ZXN0LnV0aWwnO1xyXG5pbXBvcnQgeyBFbWFpbFByZXZpZXdDb250cm9sbGVyIH0gZnJvbSAnLi9hZG1pbi9wcmV2aWV3LmNvbnRyb2xsZXInO1xyXG5pbXBvcnQgeyBNb2NrRW1haWxTZXJ2aWNlIH0gZnJvbSAnLi9tb2NrLWVtYWlsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBFbWFpbFRyYWNraW5nVXRpbCB9IGZyb20gJy4vdXRpbHMvdHJhY2tpbmcudXRpbCc7XHJcblxyXG5ATW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb25maWdNb2R1bGUsXHJcbiAgICBUeXBlT3JtTW9kdWxlLmZvckZlYXR1cmUoW0VtYWlsVGVtcGxhdGUsIEVtYWlsTG9nLCBFbWFpbFByZWZlcmVuY2VdKSxcclxuICAgIEJ1bGxNb2R1bGUucmVnaXN0ZXJRdWV1ZSh7XHJcbiAgICAgIG5hbWU6ICdlbWFpbCcsXHJcbiAgICB9KSxcclxuICBdLFxyXG4gIGNvbnRyb2xsZXJzOiBbXHJcbiAgICBFbWFpbENvbnRyb2xsZXIsXHJcbiAgICBFbWFpbFByZWZlcmVuY2VDb250cm9sbGVyLFxyXG4gICAgRW1haWxBbmFseXRpY3NDb250cm9sbGVyLFxyXG4gICAgRW1haWxUZW1wbGF0ZUNvbnRyb2xsZXIsXHJcbiAgICBFbWFpbFByZXZpZXdDb250cm9sbGVyLFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIHByb3ZpZGU6IEVtYWlsU2VydmljZSxcclxuICAgICAgdXNlRmFjdG9yeTogKGNvbmZpZzogQ29uZmlnU2VydmljZSkgPT4ge1xyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIGNvbmZpZy5nZXQoJ05PREVfRU5WJykgPT09ICdkZXZlbG9wbWVudCcgfHxcclxuICAgICAgICAgIGNvbmZpZy5nZXQoJ0VNQUlMX0VOQUJMRUQnKSA9PT0gJ2ZhbHNlJ1xyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgcmV0dXJuIG5ldyBNb2NrRW1haWxTZXJ2aWNlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFRoZSByZWFsIEVtYWlsU2VydmljZSB3aWxsIGJlIGluc3RhbnRpYXRlZCBieSBOZXN0IHdpdGggREkgZm9yIG90aGVyIGRlcHNcclxuICAgICAgICByZXR1cm4gbmV3IEVtYWlsU2VydmljZShcclxuICAgICAgICAgIGNvbmZpZyxcclxuICAgICAgICAgIHVuZGVmaW5lZCwgLy8gZW1haWxRdWV1ZVxyXG4gICAgICAgICAgdW5kZWZpbmVkLCAvLyBlbWFpbFRlbXBsYXRlUmVwb3NpdG9yeVxyXG4gICAgICAgICAgdW5kZWZpbmVkLCAvLyBlbWFpbExvZ1JlcG9zaXRvcnlcclxuICAgICAgICAgIHVuZGVmaW5lZCwgLy8gZW1haWxQcmVmZXJlbmNlUmVwb3NpdG9yeVxyXG4gICAgICAgICk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGluamVjdDogW0NvbmZpZ1NlcnZpY2VdLFxyXG4gICAgfSxcclxuICAgIEVtYWlsUHJvY2Vzc29yLFxyXG4gICAgRW1haWxUZW1wbGF0ZVNlcnZpY2UsXHJcbiAgICBFbWFpbFRlc3RTZXJ2aWNlLFxyXG4gICAgRW1haWxUcmFja2luZ1V0aWwsXHJcbiAgXSxcclxuICBleHBvcnRzOiBbRW1haWxTZXJ2aWNlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEVtYWlsTW9kdWxlIHt9XHJcbiJdLCJ2ZXJzaW9uIjozfQ==